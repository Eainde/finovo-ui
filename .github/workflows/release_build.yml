name: Release Build & Push to GCP
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION:     ${{ secrets.GCP_REGION }}
  REPO:       ${{ secrets.GCP_ARTIFACT_REPOSITORY }}
  IMAGE:      finovo-ui

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      image_uri: ${{ steps.docker.outputs.image_uri }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: false

      - name: Activate Service Account
        run: |
          cat <<EOF > "$HOME/sa-key.json"
          ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          EOF
          gcloud auth activate-service-account --key-file="$HOME/sa-key.json"
          gcloud config set project "${{ env.PROJECT_ID }}"

      - name: Enable IAM Credentials API
        run: |
          gcloud services enable iamcredentials.googleapis.com --quiet

      - name: Configure Docker Auth
        run: |
          HOST="${{ env.REGION }}-docker.pkg.dev"
          gcloud auth configure-docker "$HOST" --quiet

      - name: Build & Push Docker Image
        id: docker
        run: |
          HOST="${{ env.REGION }}-docker.pkg.dev"
          SHA_TAG="$HOST/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:${GITHUB_SHA}"
          LATEST_TAG="$HOST/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE }}:latest"

          echo "Building $SHA_TAG"
          docker build -t "$SHA_TAG" .
          echo "Pushing $SHA_TAG"
          docker push "$SHA_TAG"
          echo "Tagging and pushing $LATEST_TAG"
          docker tag "$SHA_TAG" "$LATEST_TAG"
          docker push "$LATEST_TAG"

          # expose the SHA-specific image URI for the next job
          echo "image_uri=$SHA_TAG" >> "$GITHUB_OUTPUT"

      - name: Debug what image URI did we get?
        run: |
          echo "→ step output image_uri = '${{ steps.docker.outputs.image_uri }}'"

  terraform:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      DEPLOY_SA_EMAIL:   ${{ fromJson(secrets.GCP_SERVICE_ACCOUNT_KEY).client_email }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug what image URI did we get?
        run: |
          echo "→ image_uri = '${{ needs.build-and-push.outputs.image_uri }}'"

      - name: Activate gcloud for local‑exec
        run: |
          cat <<EOF > "${HOME}/sa-key.json"
          ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          EOF
          gcloud auth activate-service-account \
          --key-file="${HOME}/sa-key.json"
          gcloud config set project "${{ env.PROJECT_ID }}"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform plan \
            -input=false \
            -var="project=${{ env.PROJECT_ID }}" \
            -var="region=${{ env.REGION }}" \
            -var="image_url=${{ needs.build-and-push.outputs.image_uri }}" \
            -var="credentials_json=$GOOGLE_CREDENTIALS" \
            -var="deployer_sa_email=$DEPLOY_SA_EMAIL" \
            -out=tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: terraform
        run: |
          terraform apply \
            -input=false \
            -auto-approve \
            tfplan
