name: Build & Push Docker Image to GCP Artifact Registry

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read       # for checkout
  id-token: write      # required by google‑github‑actions/auth to mint OIDC tokens

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION:     ${{ secrets.GCP_REGION }}              # e.g. europe-west1
  REPO:       ${{ secrets.GCP_ARTIFACT_REPOSITORY }}  # your Artifact Registry repo
  IMAGE:      finovo-ui

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out your code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Authenticate to GCP and get an OAuth2 access token
      - id: auth
        name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          token_format: 'access_token'
          # This outputs steps.auth.outputs.access_token :contentReference[oaicite:0]{index=0}

      # 3. Log Docker into Artifact Registry using that token
      - name: Configure Docker credentials
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          # OAuth2 token login pattern for GAR :contentReference[oaicite:1]{index=1}

      # 4. Build and push your image
      - name: Build & Push Docker Image
        run: |
          HOST="$REGION-docker.pkg.dev"
          SHA_TAG="$HOST/$PROJECT_ID/$REPO/$IMAGE:${GITHUB_SHA}"
          LATEST_TAG="$HOST/$PROJECT_ID/$REPO/$IMAGE:latest"

          echo "Building $SHA_TAG"
          docker build -t "$SHA_TAG" .

          echo "Pushing $SHA_TAG"
          docker push "$SHA_TAG"

          echo "Tagging and pushing $LATEST_TAG"
          docker tag "$SHA_TAG" "$LATEST_TAG"
          docker push "$LATEST_TAG"
